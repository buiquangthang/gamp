<div class="page-header">
  <%= link_to content_tag(:i, t("education.layouts.page_title.member"), class: "icon-user"),
    "#", class: "btn btn-primary",
    data: {toggle: "modal", target: "#busstop-modal"} %>
  <%= link_to bus_routes_path, class: 'btn btn-default' do %>
    <span class="glyphicon glyphicon-list-alt"></span>
    Back
  <% end %>
  <%= link_to edit_bus_route_path(@bus_route), class: 'btn btn-primary' do %>
    <span class="glyphicon glyphicon-pencil"></span>
    Edit
  <% end %>
  <h1>Show bus_route</h1>
</div>

<div class="container">
  <div class="row">
    <div class="col-md-6">
      <dl class="dl-horizontal">
        <dt>Name:</dt>
        <dd><%= @bus_route.name %></dd>
      </dl>
    </div>
    <div class="col-md-6">
      <div style='width: 600px;'>
        <div id="map" style='width: 600px; height: 300px;'></div>
      </div>
    </div>
    <div class="col-md-6">
        <div class="row">
          <div class="col-md-8">
            <input type="text">
          </div>
          <div class="col-md-4">
            <%= button_tag type: :submit, class: "btn btn-primary pull-right",
              id: "btn-add-places-routes" do %>
              <%= t "dashboard.whitelist.destroy.add" %>
            <% end %>
          </div>
        </div>
      <div class="table-responsive">
        <%= form_tag add_places_path(@bus_route.id), id: "form-add-places-routes" do %>
          <table class="table table-striped table-bordered table-hover scroll">
            <thead>
              <tr>
                <th>#</th>
                <th>Code</th>
                <th>Address</th>
                <th>Title</th>
                <th></th>
              </tr>
            </thead>

            <tbody>
              <%= render @another_places %>
            </tbody>
          </table>
        <% end %>
      </div>
    </div>
    <div class="col-md-6">
      <div class="row">
        <div class="col-md-8">
          <input type="text">
        </div>
        <div class="col-md-4">
          <%= button_tag type: :submit, class: "btn btn-danger pull-right",
            id: "btn-delete-places-routes" do %>
            <i class="gi gi-remove_2"></i> <%= t "dashboard.whitelist.destroy.delete" %>
          <% end %>
        </div>
      </div>
      <div class="table-responsive">
        <%= form_tag delete_places_path(@bus_route.id), id: "form-delete-places-routes" do %>
          <table class="table table-striped table-bordered table-hover scroll">
            <thead>
              <tr>
                <th>#</th>
                <th>Code</th>
                <th>Address</th>
                <th>Title</th>
              </tr>
            </thead>

            <tbody>
              <%= render @places %>
            </tbody>
          </table>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
$(document).ready(function(){
  var markers = <%=raw @hash.to_json %>
  window.onload = function () {
    var mapOptions = {
        center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
        zoom: 10,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById("map"), mapOptions);
    var infoWindow = new google.maps.InfoWindow();
    var lat_lng = new Array();
    var latlngbounds = new google.maps.LatLngBounds();
    for (i = 0; i < markers.length; i++) {
        var data = markers[i]
        var myLatlng = new google.maps.LatLng(data.lat, data.lng);
        lat_lng.push(myLatlng);
        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
            title: data.title
        });
        latlngbounds.extend(marker.position);
        (function (marker, data) {
            google.maps.event.addListener(marker, "click", function (e) {
                infoWindow.setContent(data.infowindow);
                infoWindow.open(map, marker);
            });
        })(marker, data);
    }
    map.setCenter(latlngbounds.getCenter());
    map.fitBounds(latlngbounds);

    //***********ROUTING****************//

    //Intialize the Path Array
    var path = new google.maps.MVCArray();

    // Intialize the Direction Service
    var service = new google.maps.DirectionsService();

    //Set the Path Stroke Color
    var poly = new google.maps.Polyline({ map: map, strokeColor: '#4986E7' });

    //Loop and Draw Path Route between the Points on MAP
    // for (var i = 0; i < lat_lng.length; i++) {
      var i=0;
      var interval = setInterval(function () {
        console.log(i);
        if ((i + 1) < lat_lng.length) {
          var src = lat_lng[i];
          var des = lat_lng[i + 1];

          path.push(src);
          poly.setPath(path);
          service.route({
              origin: src,
              destination: des,
              travelMode: google.maps.DirectionsTravelMode.DRIVING
          }, function (result, status) {
              console.log(status);
              if (status == google.maps.DirectionsStatus.OK) {
                for (var j = 0, len = result.routes[0].overview_path.length; j < len; j++) {
                    path.push(result.routes[0].overview_path[j]);
                  }
              }
          });
        }
      i++;
      if (i == lat_lng.length) {
          clearInterval(interval);
          var bounds = new google.maps.LatLngBounds();
          map.setCenter(latlngbounds.getCenter());
          map.fitBounds(latlngbounds);
      }
    }, 810)
  }
})
</script>
